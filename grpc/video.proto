syntax = "proto3";
option go_package = "./video";
package video;
import "user.proto";

//  ============================feed视频流======================================
message Video {
  // @gotags: json:"id"
  uint64 id = 1;
  // @gotags: json:"author"
  user.User author = 2;
  // @gotags: json:"play_url"
  string play_url = 3;
  // @gotags: json:"favorite_count,nocopy"
  uint64 favorite_count = 4;
  // @gotags: json:"comment_count,nocopy"
  uint64 comment_count = 5;
  // @gotags: json:"is_favorite,nocopy"
  bool is_favorite = 6;
  // @gotags: json:"title"
  string title = 7;
  // @gotags: json:"share_count,nocopy"
  uint64 share_count = 8;
  // @gotags: json:"create_at"
  uint64 create_at = 9;
}

message FeedRequest {
  // @gotags: json:"latest_time"
  int64 latest_time = 1;       //可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  // @gotags: json:"token"
  uint64 token_user_id = 2;            //可选参数，登录用户设置
}

message FeedResponse {
  // @gotags: json:"status_code"
  int32 status_code = 1;
  // @gotags: json:"status_msg"
  string status_msg = 2;
  // @gotags: json:"video_list"
  repeated Video video_list = 3; // 视频列表
  // @gotags: json:"next_time"
  int64 next_time = 4; // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
}

//  ===============================视频投稿==================================
message PublishActionRequest{
  // @gotags: json:"token_user_id"
  uint64 token_user_id = 1;
  // @gotags: json:"play_url"
  string PlayUrl = 2;
  // @gotags: json:"title"
  string title = 3;
}

message PublishActionResponse {
  // @gotags: json:"status_code"
  int32 status_code = 1;
  // @gotags: json:"status_msg"
  string status_msg = 2;
}

//  ===============================发布列表==================================
message PublishListRequest{
  // @gotags: json:"user_id"
  uint64 user_id = 1;
  // @gotags: json:"token_user_id"
  uint64 token_user_id = 2;
}

message PublishListResponse{
  // @gotags: json:"status_code"
  int32 status_code = 1;
  // @gotags: json:"status_msg"
  string status_msg = 2;
  // @gotags: json:"video_list"
  repeated Video video_list = 3;
}

service VideoService {
  rpc Feed (FeedRequest) returns (FeedResponse);
  rpc PublishAction (PublishActionRequest) returns (PublishActionResponse);
  rpc PublishList (PublishListRequest) returns (PublishListResponse);
}